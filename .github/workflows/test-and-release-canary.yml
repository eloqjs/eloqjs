# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Test and Release Canary

on:
  push:
    branches: [
      dev,
    ]

  pull_request:
    branches: [
      dev,
    ]

jobs:
  pre_job:
    name: Pre Job

    runs-on: ubuntu-latest

    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}

    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          github_token: ${{ github.token }}
          paths_ignore: '["**/*.md", "lerna.json", ".editorconfig", ".gitignore", ".eslintignore", ".prettierignore", ".github/**"]'
          do_not_skip: '["workflow_dispatch", "schedule"]'

  test:
    name: Test

    needs: pre_job

    if: needs.pre_job.outputs.should_skip != 'true' || (github.ref != 'refs/heads/dev' && github.head_ref != 'dev' && github.base_ref != 'dev')

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest ]
        node-version: [ 14.x, 16.x ]
      fail-fast: true

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://registry.npmjs.org/

      - name: Cache node_modules
        id: cache-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ matrix.node-version }}-${{ runner.OS }}-build-${{ hashFiles('yarn.lock') }}

      - name: Install Dependencies
        if: steps.cache-modules.outputs.cache-hit != 'true'
        run: yarn install && yarn lerna bootstrap

      - name: Lint
        run: yarn lint

      - name: Test
        run: yarn test

  release-canary:
    name: Release Canary

    needs: test

    runs-on: ${{ matrix.os }}

    if: github.event_name == 'push' && github.ref == 'refs/heads/dev'

    strategy:
      matrix:
        os: [ ubuntu-latest ]
      fail-fast: true

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          # pulls all commits (needed for lerna / semantic release to correctly version)
          fetch-depth: "0"

      # pulls all tags (needed for lerna / semantic release to correctly version)
      - name: Pull Tags
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

      - name: Git Identity
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/$GITHUB_REPOSITORY
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: NPM Registry
        run: |
          npm config set registry https://registry.npmjs.org/
          npm config set "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}"

      - name: Cache node_modules
        id: cache-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: 16.x-${{ runner.OS }}-build-${{ hashFiles('yarn.lock') }}

      - name: Install Dependencies
        if: steps.cache-modules.outputs.cache-hit != 'true'
        run: yarn install && yarn lerna bootstrap

      - name: Build
        run: yarn build

      # - name: Test and Generate Coverage
      #   run: yarn coverage

      # - name: Upload Coverage to Codecov
      #   uses: codecov/codecov-action@v1
      #   with:
      #     directory: ./coverage

      - name: Release Canary
        run: yarn lerna publish --canary --preid dev --pre-dist-tag dev --exact --force-publish='*' --no-git-tag-version --no-changelog --no-verify-access --yes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
